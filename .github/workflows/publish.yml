name: CI Publish

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  publish:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET (stable)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.100'

    - name: Restore
      run: dotnet restore UnGate11/UnGate11.csproj

    - name: Build
      run: dotnet build UnGate11/UnGate11.csproj -c Release -r win-x64 --no-restore

    - name: Publish self-contained single file
      run: dotnet publish UnGate11/UnGate11.csproj -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:PublishTrimmed=false -o publish

    - name: List publish output
      run: dir publish

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: UnGate11-publish
        path: publish

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('v{0}-{1}', github.run_number, github.sha) }}
        release_name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('UnGate11 v{0}', github.run_number) }}
        body: "Automated release from CI build ${{ github.run_number }} (commit ${{ github.sha }})"
        draft: false
        prerelease: false

    - name: Find publish exe
      id: find_exe
      shell: pwsh
      run: |
        $exe = Get-ChildItem -Path publish -Filter *.exe -Recurse | Select-Object -First 1
        if ($null -eq $exe) { Write-Host "No exe found"; exit 1 }
        Write-Host "Found exe: $($exe.FullName)"
        echo "exe_path=$($exe.FullName)" | Out-File -FilePath "$env:GITHUB_OUTPUT" -Encoding utf8 -Append
        echo "exe_name=$($exe.Name)" | Out-File -FilePath "$env:GITHUB_OUTPUT" -Encoding utf8 -Append

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.find_exe.outputs.exe_path }}
        asset_name: ${{ steps.find_exe.outputs.exe_name }}
        asset_content_type: application/octet-stream
